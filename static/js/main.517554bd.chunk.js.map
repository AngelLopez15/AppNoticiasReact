{"version":3,"sources":["components/Header.js","components/Formulario.js","hooks/useSelect.js","components/Noticia.js","components/ListadoNoticias.js","App.js","serviceWorker.js","index.js","components/Formulario.module.css"],"names":["Header","titulo","className","href","Formulario","setCategoria","stateInicial","opciones","useState","state","setstate","value","onChange","e","target","map","opcion","key","label","useSelect","categoria","SetCategoria","styles","buscador","onSubmit","preventDefault","title","type","btn_block","Noticia","noticia","urlToImage","url","description","source","imagen","src","alt","name","title_news","rel","ListadoNoticias","noticias","App","setNoticias","useEffect","a","fetch","respuesta","json","articles","consultarAPI","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.517554bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Header = ({titulo}) => {\r\n  return (\r\n    <nav className=\"nav-wrapper light-blue darken-3\">\r\n      <a href=\"#!\" className=\"brand-logo center\">{titulo}</a>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.propTypes ={\r\n  titulo:PropTypes.string.isRequired\r\n}","import React from 'react'\r\nimport styles from './Formulario.module.css'\r\nimport { useSelect } from '../hooks/useSelect'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Formulario = ({setCategoria}) => {\r\n\r\n  // opciones de noticias\r\n  const opciones = [\r\n    {value:'general',label:'General'},\r\n    {value:'business',label:'Negocios'},\r\n    {value:'entertainment',label:'Entretenimiento'},\r\n    {value:'health',label:'Salud'},\r\n    {value:'science',label:'Ciencia'},\r\n    {value:'sports',label:'Deportes'},\r\n    {value:'technology',label:'Tecnologia'}\r\n  ] \r\n\r\n  // utilizar custom hook\r\n  const [categoria, SetCategoria] = useSelect('general', opciones)\r\n\r\n  // al hacer submit al form pasar la categoria a app.js\r\n  const buscarNoticias = e =>{\r\n    e.preventDefault()\r\n    setCategoria(categoria)\r\n  }\r\n\r\n  return (\r\n    <div className={`${styles.buscador} row`}>\r\n      <div className=\"col s12 m8 offset-m2\">\r\n        <form\r\n          onSubmit={buscarNoticias}\r\n        >\r\n          <p className={styles.title}>Encuentra noticias por categoria</p>\r\n          <SetCategoria />\r\n          <div className=\"input-field col s12\">\r\n            <input \r\n              type=\"submit\"\r\n              className={`${styles.btn_block} btn-large amber darken-2`}\r\n              // className={`${styles['btn-block']} btn-large amber darken-2`}\r\n              value=\"Buscar\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nFormulario.propTypes ={\r\n  setCategoria:PropTypes.func.isRequired\r\n}","import React, { useState } from 'react'\r\n\r\nexport const useSelect = (stateInicial, opciones) => {\r\n  \r\n  // state del custom hook\r\n  const [state, setstate] = useState(stateInicial)\r\n\r\n  const SelectNoticias = () =>(\r\n    <select\r\n      className=\"browser-default\"\r\n      value={state}\r\n      onChange={e=>setstate(e.target.value)}\r\n    >\r\n      {opciones.map(opcion=>(\r\n        <option key={opcion.value} value={opcion.value}>{opcion.label}</option>\r\n      ))}\r\n    </select>\r\n  )\r\n\r\n  return [state, SelectNoticias ]\r\n}\r\n","import React from 'react'\r\nimport styles from './Formulario.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Noticia = ({noticia}) => {\r\n  // extrayendo los datos\r\n  const {urlToImage, url, title, description, source} = noticia\r\n\r\n  const imagen= (urlToImage) ?\r\n  <div className=\"card-image\">\r\n    <img src={urlToImage} alt={title} />\r\n    <span className=\"card-title\">{source.name}</span>\r\n  </div>\r\n  : null\r\n\r\n  return (\r\n    <div className=\"col s12 m6 l4\">\r\n      <div className=\"card\">\r\n        {imagen}\r\n        <div className=\"card-content\">\r\n          <p className={styles.title_news}>{title}</p>\r\n          <p>{description}</p>\r\n        </div>\r\n        <div className=\"card-action\">\r\n          <a \r\n            href={url}\r\n            target=\"_Blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"waves-effect waves-light btn\"\r\n          >Ver noticia completa</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nNoticia.propTypes ={\r\n  noticia:PropTypes.object.isRequired\r\n}","import React from 'react'\r\nimport { Noticia } from './Noticia'\r\nimport PropTypes from 'prop-types'\r\n\r\n// Cuando iteramos siempre necesitamos un key\r\nexport const ListadoNoticias = ({noticias}) => {\r\n  return (\r\n    <div className=\"row\">\r\n      {noticias.map(noticia=>(\r\n        <Noticia \r\n          key={noticia.url}\r\n          noticia={noticia}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nListadoNoticias.propTypes ={\r\n  noticias:PropTypes.array.isRequired\r\n}","import React, { Fragment, useState, useEffect } from 'react';\nimport { Header } from './components/Header';\nimport { Formulario } from './components/Formulario';\nimport { ListadoNoticias } from './components/ListadoNoticias';\n\nfunction App() {\n\n  // definir la categoria\n  const [categoria, setCategoria] = useState('')\n\n  const [noticias, setNoticias] = useState([])\n\n  useEffect(() => {\n    const consultarAPI = async()=>{\n      const url = `https://newsapi.org/v2/top-headlines?country=mx&category=${categoria}&apiKey=dd8fc8441d5240ec9eccc7acd19e39f9`\n      \n      const respuesta = await fetch(url)\n\n      const noticias = await respuesta.json()\n\n      setNoticias(noticias.articles)\n    }\n\n    consultarAPI()\n\n  }, [categoria])\n\n  return (\n    <Fragment>\n      <Header \n        titulo='Buscador de noticias'\n      />\n      <div className=\"container white\">\n        <Formulario \n          setCategoria={setCategoria}\n        />\n        <ListadoNoticias \n          noticias={noticias}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Formulario_title__2OjTd\",\"title_news\":\"Formulario_title_news__1nD52\",\"buscador\":\"Formulario_buscador__Eo3OK\",\"btn_block\":\"Formulario_btn_block__3ntPH\"};"],"sourceRoot":""}